all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
all_merged
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
all_merged
depth_freqs_10
depth_freqs_11
depth_freqs_12
depth_freqs_13
depth_freqs_14
depth_freqs_15
Reduce(function(x, y) merge(x, y, by = 0, all.x =TRUE), list(depth_freqs_10, depth_freqs_11,
depth_freqs_12, depth_freqs_13,
depth_freqs_14, depth_freqs_15))
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
all_merged
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
all_merged
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
all_merged
all_merged <- merge(all_merged, depth_freqs_12, by = "Row.names", all.x = TRUE)
all_merged
colnames(all_merged)
all_merged
all_merged <- merge(all_merged, depth_freqs_12, by = "Row.names", all.x = TRUE)
all_merged <- merge(all_merged, depth_freqs_12, by = "row.names", all.x = TRUE)
all_merged
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
all_merged
all_merged <- merge(depth_freqs_10, depth_freqs_12, by = 0, all.x = TRUE)
all_merged
all_merged$Row.names
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
all_merged
row.names(all_merged) <- all_merged$Row.names
all_merged
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
all_merged
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_13, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_14, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_15, by = 0, all.x = TRUE)
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_13, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_14, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged <- merge(all_merged, depth_freqs_15, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
colnames(all_merged)
all_merged
all_merged
plot(all_merged)
plot.table(all_merged)
library(graphics)
plot.table(all_merged)
plot(all_merged, type = "l")
mtcars
f <- ggplot(mpg, aes(cty, hwy))
f + geom_blank()
f + geom_point()
all_merged
mpg
la <- ggplot(all_merged, aes('2010', '2011'))
la + geom_point()
ggplot(all_merged, aes('2010', '2011'))
all_merged
ggplot(all_merged, aes(all_merged$'2010', all_merged$'2011'))
all_merged
all_merged
as.data.frame(all_merged)
data.frame(all_merged)
ggplot(as.data.frame(all_merged), aes(all_merged$'2010', all_merged$'2011'))
ggplot(as.data.frame(all_merged), aes(x = all_merged$'2010', y = all_merged$'2011'))
ggplot(data = as.data.frame(all_merged), aes(x = all_merged$'2010', y = all_merged$'2011'))
all_merged
typeof(all_merged)
data.frame(all_merged)
typeof(data.frame(all_merged))
depth_freqs_10
rankings_10
rankings_10$country
table(rankings_10$country)
data.frame(table(rankings_10$country))
all_merged
data.frame(all_merged)
all_merged <- data.frame(all_merged)
all_merged
ggplot(data = all_merged, aes(x = X2010, y = X2011))
ggplot(data = all_merged, aes(x = X2010, y = X2011)) + geom_point()
ggplot(data = all_merged, aes(x = row.names(all_merged), y = X2011)) + geom_point()
all_merged
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_13, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_14, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_15, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
all_merged["ARG"]
all_merged[1,]
ggplot(data = all_merged, aes(x = rownames(all_merged), y = colnames(all_merged), group = rownames(all_merged))) +
geom_line(size=.75) + geom_point()
library(reshape2)
all_merged <- melt(all_merged)
all_merged
all_merged$rowid <- 1:6
all_merged
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid)))
all_merged
all_merged[is.na(all_merged)] <- 0
all_merged
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid)))
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid)))
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Players") + xlab("Year")
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year")
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + theme(legend.title="Country")
ggplot(all_merged, aes(variable, value, group="Country")) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + scale_fill_discrete(name="Experimental\nCondition")
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + scale_fill_discrete(name="Experimental\nCondition")
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + scale_fill_manual(name="Experimental\nCondition")
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + scale_fill_manual(name="Experimental\nCondition", values = c("orange", "red"))
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + geom_line(size=.75) + geom_point()
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(size=.75) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") +  + geom_point()
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(size=.75) + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + geom_point()
ggplot(all_merged, aes(variable, value, group=factor(rowid))) + geom_line(size=.75) + geom_point() + geom_line(aes(color=factor(rowid))) + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, group=factor(rowid), color = factor(rowid))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, group=factor(rowid), color = factor(rowid), fill = "country")) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, group=factor(rowid), color = factor(rowid))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
all_merged
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_13, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_14, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_15, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
country_names <- rownames(all_merged)
country_names
all_merged <- melt(all_merged)
all_merged
all_merged[is.na(all_merged)] <- 0
all_merged
all_merged[is.na(all_merged)] <- country_names
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_13, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_14, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_15, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
country_names <- rownames(all_merged)
country_names
all_merged <- melt(all_merged)
all_merged
all_merged[is.na(all_merged)] <- 0
all_merged
all_merged$country <- country_names
all_merged
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, fill = country, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, fill = country, color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings")
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + theme(legend.title = element_text(colour="chocolate", size=16, face="bold"))+ scale_color_discrete(name="This color is\ncalled chocolate!?")
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
final
all_merged <- merge(depth_freqs_10, depth_freqs_11, by = 0, all.x=TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_12, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_13, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_14, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged <- merge(all_merged, depth_freqs_15, by = 0, all.x = TRUE)
row.names(all_merged) <- all_merged$Row.names
all_merged$Row.names <- NULL
all_merged
merged_before_reshape <- all_merged
merged_before_reshape
country_names <- rownames(all_merged)
country_names
library(reshape2)
all_merged <- melt(all_merged)
all_merged
all_merged[is.na(all_merged)] <- 0
all_merged$country <- country_names
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("Evolution of Rankings") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
merged_before_reshape
final
final_country_names <- rownames(final)
final_country_names
final_before_reshape <- final
final_before_reshape
library(reshape2)
final <- melt(final)
final
final$country <- final_country_names
final
ggplot(final, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Year") + ggtitle("2010 Rankings") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
ggplot(final, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Category") + ggtitle("2010 Country Depth") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
final_before_reshape
ggplot(final, aes(variable, value, group=factor(country), color = factor(country))) + geom_bar(stat="identity") + ylab("Number of Players") + xlab("Category") + ggtitle("2010 Country Depth") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
ggplot(final, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Category") + ggtitle("2010 Country Depth") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
library(reshape2)
library(ggplot2)
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players in Top 100") + xlab("Year") + ggtitle("Evolution of Rankings") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players in Top 100") + xlab("Year") + ggtitle("Evolution of Tennis Rankings") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players in Top 100") + xlab("Year") + ggtitle("Evolution of Tennis Rankings", face = "bold") + theme(legend.title = element_text(size=16))+ scale_color_discrete(name="Country")
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players in Top 100") + xlab("Year") + ggtitle("Evolution of Tennis Rankings") + theme(legend.title = element_text(size=16))+ scale_color_discrete(name="Country")
ggplot(all_merged, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players in Top 100") + xlab("Year") + ggtitle("Evolution of Tennis Rankings") + theme(legend.title = element_text(size=12))+ scale_color_discrete(name="Country")
ggplot(final, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Number of Players") + xlab("Category") + ggtitle("2010 Country Depth") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
all_100
rankings_10
rankings_11
rankings_12
rankings_13
rankings_14
final
final_before_reshape
final_before_reshape
final_before_reshape$top100
sum(final_before_reshape$top100)
sum_top100 <- sum(final_before_reshape$top100)
percentage = c()
final_before_reshape[1]
final_before_reshape[1, 1]
for (i in 1:length(rownames(final_before_reshape))) {
percentage = c(percentage, final_before_reshape[1, i] / sum_top100)
}
percentage
length(rownames(final_before_reshape))
final_before_reshape[1, 2]
final_before_reshape[1]
final_before_reshape[1,1]
final_before_reshape[1,2]
final_before_reshape[1,3]
final_before_reshape[1][1]
final_before_reshape[1]
final_before_reshape[1,]
final_before_reshape[,1]
for (i in 1:length(rownames(final_before_reshape))) {
percentage = c(percentage, final_before_reshape[,1][i] / sum_top100)
}
percentage
sum_top100 <- sum(final_before_reshape$top100)
percentage = c()
for (i in 1:length(rownames(final_before_reshape))) {
percentage = c(percentage, final_before_reshape[,1][i] / sum_top100)
}
percentage
length(percentage)
sum_top100 <- sum(final_before_reshape$top100)
percentage_100 = c()
for (i in 1:length(rownames(final_before_reshape))) {
percentage_100 = c(percentage_100, final_before_reshape[,1][i] / sum_top100)
}
percentage_100
length(percentage)
final_before_reshape[,2]
sum_top50 <- sum(final_before_reshape$top50)
percentage_50 = c()
final_before_reshape[,2]
for (i in 1:length(rownames(final_before_reshape))) {
percentage_50 = c(percentage_50, final_before_reshape[,2][i] / sum_top50)
}
percentage_50
sum_top20 <- sum(final_before_reshape$top20)
percentage_20 = c()
final_before_reshape[,3]
for (i in 1:length(rownames(final_before_reshape))) {
percentage_20 = c(percentage_20, final_before_reshape[,3][i] / sum_top20)
}
percentage_20
sum_top10 <- sum(final_before_reshape$top10)
percentage_10 = c()
final_before_reshape[,4]
for (i in 1:length(rownames(final_before_reshape))) {
percentage_10 = c(percentage_10, final_before_reshape[,4][i] / sum_top10)
}
percentage_10
final_before_reshape
percentage_final <- final_before_reshape
percentage_final <- final_before_reshape
percentage_final$top100 <- percentage_100
percentage_final$top50 <- percentage_50
percentage_final$top20 <- percentage_20
percentage_final$top10 <- percentage_10
percentage_final
p_final_before_reshape <- percentage_final
final_country_names <- rownames(final)
p_final_before_reshape <- percentage_final
percentage_final <- melt(percentage_final)
percentage_final$country <- final_country_names
ggplot(percentage_final, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Percentage of Players in Respective Category") + xlab("Category") + ggtitle("2010 Country Depth") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
percentage_final
final
final_country_names
final_country_names <- rownames(percentage_final)
final_country_names
percentage_final
final_before_reshape
final_country_names <- rownames(final_before_reshape)
p_final_before_reshape <- percentage_final
percentage_final <- melt(percentage_final)
percentage_final$country <- final_country_names
percentage_final
ggplot(percentage_final, aes(variable, value, group=factor(country), color = factor(country))) + geom_line(size=.75) + geom_point() + ylab("Percentage of Players in Respective Category") + xlab("Category") + ggtitle("2010 Country Depth") + theme(legend.title = element_text(size=16, face="bold"))+ scale_color_discrete(name="Country")
percentage_100
percentage_final
rankings_15
rankings_15$points
rankings_15$country
table(rankings_15$points)
table(rankings_15$country)
table(rankings_15$points, rankings_15$country)
data.frame(rankings_15$points, rankings_15$country)
table(rankings_15$country)
rankings_15
data.frame(rankings_15$points, rankings_15$country)
head(data.frame(rankings_15$points, rankings_15$country))
head(rankings_15)
country_points <- data.frame(rankings_15$points, rankings_15$country))
country_points <- data.frame(rankings_15$points, rankings_15$country)
country_points
unique(country_points$rankings_15.country)
nrows(country_points)
numrows(country_points)
num.rows(country_points)
nrow(country_points)
country_points[unique(rankings_15$country)]
country_points[unique(rankings_15$country),]
nrow(country_points[unique(rankings_15$country),])
nrow(country_points)
country_points
names(country_points) <- c("points", "country")
country_points
distinct_countries <- unique(rankings_15$country)
distinct_countries
length(distinct_countries)
country_points[distinct_countries[1]]
country_points[distinct_countries[1],]
which(country_points$country == distinct_countries[1])
distinct_countries
which(country_points$country == distinct_countries[2])
list_points <- c()
for (i in 1:length(distinct_countries)) {
index1 <- which(country_points$country == distinct_countries[i])
temp1 <- c(rankings_10$points[index1])
list_points[[i]] <- temp1
}
list_points
names(list_points) <- distinct_countries
list_points
list_points
list_points <- c()
for (i in 1:length(distinct_countries)) {
index1 <- which(country_points$country == distinct_countries[i])
temp1 <- c(rankings_15$points[index1])
list_points[[i]] <- temp1
}
list_points
names(list_points) <- distinct_countries
list_points
head(rankings_15)
head(list_points)
list_points
rankings_15$points
sum_2015_points <- sum(rankings_15$points)
sum_2015_points
rankings$country
rankings_15$country
unique(rankings_15$country)
length(unique(rankings_15$country))
avg_points_per_country <- sum_2015_points / distinct_countries
sum_2015_points <- sum(rankings_15$points)
sum_2015_points <- sum(rankings_15$points)
distinct_countries <- unique(rankings_15$country)
avg_points_per_country <- sum_2015_points / length(distinct_countries)
avg_points_per_country
country_points
unique(country_points$rankings_15.country)
country_points
nrow(country_points)
country_points <- data.frame(rankings_15$points, rankings_15$country)
names(country_points) <- c("points", "country")
nrow(country_points[unique(rankings_15$country),])
length(distinct_countries)
distinct_countries
which(country_points$country == distinct_countries[2])
country_points[distinct_countries[1],]
list_points
list_points <- c()
for (i in 1:length(distinct_countries)) {
index1 <- which(country_points$country == distinct_countries[i])
temp1 <- c(rankings_15$points[index1])
list_points[[i]] <- temp1
}
list_points
names(list_points) <- distinct_countries
list_points
avg_points_per_country
list_points[1]
list_points[[1]]
sum(list_points[[1]])
sum(list_points[[1]]) / length(list_points[[1]])
sum_2015_points
rankings_15
sum_2015_points / nrow(rankings_15)
avg_points_per_player <- sum_2015_points / nrow(rankings_15)
avg_points_per_player
length(list_points)
list_points[[1]]
avg_player_for_country = list()
for (i in 1:length(list_points)) {
avg_player_for_country[[i]] <- sum((list_points[[i]]) / length(list_points[[i]]))
}
avg_player_for_country
names(avg_player_for_country) <- distinct_countries
avg_player_for_country
avg_points_per_player
avg_player_for_country
avg_points_per_player
avg_player_for_country[[1]]
list_difference_country_vs_avg <- list()
for (i in 1:length(avg_player_for_country)) {
list_difference_country_vs_avg[[i]] <- avg_player_for_country[[i]] - avg_points_per_player
}
list_difference_country_vs_avg
names(list_difference_country_vs_avg) <- distinct_countries
list_difference_country_vs_avg
table(list_difference_country_vs_avg)
list_difference_country_vs_avg
data.frame(list_difference_country_vs_avg)
table(data.frame(list_difference_country_vs_avg))
data.frame(list_difference_country_vs_avg)
avg_vs_country_2015 <- data.frame(list_difference_country_vs_avg)
Row.names(avg_vs_country_2015)
row.names(avg_vs_country_2015)
col.names(avg_vs_country_2015)
colnames(avg_vs_country_2015)
list_difference_country_vs_avg
ncol(avg_vs_country_2015)
nrow(avg_vs_country_2015)
